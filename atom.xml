<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>东的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-02-12T03:30:59.545Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>东</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/02/12/Untitled/"/>
    <id>http://example.com/2023/02/12/Untitled/</id>
    <published>2023-02-12T03:30:59.545Z</published>
    <updated>2023-02-12T03:30:59.545Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/01/29/Q&amp;A/"/>
    <id>http://example.com/2023/01/29/Q&amp;A/</id>
    <published>2023-01-29T09:40:23.652Z</published>
    <updated>2023-04-02T06:33:47.377Z</updated>
    
    <content type="html"><![CDATA[<p>Q&amp;A</p><p><b>1.29</b></p><p> 什么事战略思维？什么机会？如何做好战略？</p><p><b>1.30</b></p><p>1）面试问题整理</p><p>2）沟通技巧研究。完成新河大学沟通部分课程</p><p>3）注意事物的属性，通过属性完成类别划分，而分类又是事物研究的重要方法之一</p><p>4）问题解决方法： 1.重新定义问题，使其具备可操作性 2.问题划分，分成子问题 3重复步骤2直到具备可操作性</p><p><b>1.31</b></p><ol><li>阅读训练</li></ol><p>2）通过断点方式查看栈帧，快速完成业务逻辑梳理</p><p>3）熟悉activity的启动过程和窗口视图的显示过程</p><p><b>2.1</b></p><p>1）阅读训练</p><p>a. 绕口令</p><p>b.口部操</p><p>c.咬字尽量用力，清晰</p><p>2）了解View surface绘制过程，加强训练，如自定义view等</p><p><b>2.4</b></p><ol><li>阅读训练</li></ol><p>2）结构化战略思维：MECE原则</p><p>麦肯锡问题解决五步法：定义问题 -&gt; 结构化分析-&gt; 提出假设-&gt; 验证假设-&gt;交付</p><p>结构化战略思维四大原则：</p><p>方法论：1）MECE原则</p><p>​2）假设为前提</p><p>行为准则：3）数字说话</p><p>​4）洞见优于表象</p><p>方法论上是否运用了假设为前提，分析时是否遵守MECE原则</p><p>有没有运用到数字来进行说明举证</p><p>核心洞见时什么（或者说核心规律是什么，对于后面的行为有什么指导？）</p><p><b>2.6</b></p><p>1)阅读训练</p><p>2）任务执行，避免“就近原则”，要分清轻重缓急</p><p>3）积极参与到分配的任务执行中去</p><p>4）Binder通信过程学习</p><p><b>2.7</b></p><p>1.阅读训练</p><p>2.整理Binder知识点 </p><p>由表及里：如何使用-&gt;涉及到的关键对象和方法-&gt;调用过程-&gt;底层数据结构设计</p><p><b>2.9</b></p><p>1.阅读训练</p><p>2.整理mvvm知识点，已完成</p><p>3.整理apt知识点，完成注解部分</p><p>4.加深对so的理解</p><p><b>2.12</b></p><p>1.阅读训练</p><p>2.实践是检验真理的唯一标准</p><p>或者说，场景是规律的载体，脱离了场景谈规律都是在扯淡</p><p><b>2.12</b></p><p>寻找可操作的东西，然后训练</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://drive.google.com/uc?export=download&amp;id=1dF0Wq0atKTqr6AGUzvbmqrMvxytIrwP8</span><br></pre></td></tr></table></figure><p>复制到剪贴板</p><p>Clash订阅链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmess://ew0KICAidiI6ICIyIiwNCiAgInBzIjogIuKciCB3d3cub2FveS5uZXR86Iux5Zu9IiwNCiAgImFkZCI6ICJxdXJhbndlYjEueHl6IiwNCiAgInBvcnQiOiAiNDQzIiwNCiAgImlkIjogIjhiYmQ5MWZlLWEzMGItNGUyOS1iZmM3LWMyOGE0NGMwY2I4ZiIsDQogICJhaWQiOiAiMCIsDQogICJzY3kiOiAiYXV0byIsDQogICJuZXQiOiAid3MiLA0KICAidHlwZSI6ICJub25lIiwNCiAgImhvc3QiOiAiIiwNCiAgInBhdGgiOiAiL2N1cnJlbnRfdGltZSIsDQogICJ0bHMiOiAidGxzIiwNCiAgInNuaSI6ICIiLA0KICAiYWxwbiI6ICIiDQp9</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://drive.google.com/uc?export=download&amp;id=1HvAXB8TfY2BsD_iZ1ITlyQI0F7g76KSP</span><br></pre></td></tr></table></figure><p>复制到剪贴板</p><p>Clash订阅链接</p><p><a href="https://v2rayshare.com/wp-content/uploads/2023/04/20230402.yaml">https://v2rayshare.com/wp-content/uploads/2023/04/20230402.yaml</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Q&amp;amp;A&lt;/p&gt;
&lt;p&gt;&lt;b&gt;1.29&lt;/b&gt;&lt;/p&gt;
&lt;p&gt; 什么事战略思维？什么机会？如何做好战略？&lt;/p&gt;
&lt;p&gt;&lt;b&gt;1.30&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;1）面试问题整理&lt;/p&gt;
&lt;p&gt;2）沟通技巧研究。完成新河大学沟通部分课程&lt;/p&gt;
&lt;p&gt;3）注意事物的属性，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/01/29/%E3%80%8A%E8%83%9C%E8%80%85%E6%80%9D%E7%BB%B4%E3%80%8B%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2023/01/29/%E3%80%8A%E8%83%9C%E8%80%85%E6%80%9D%E7%BB%B4%E3%80%8B%E7%AC%94%E8%AE%B0/</id>
    <published>2023-01-29T06:27:49.660Z</published>
    <updated>2023-01-29T09:10:48.880Z</updated>
    
    <content type="html"><![CDATA[<p>《胜者思维》笔记</p><p>毫无以为每个人都想成为胜利者，而不想成为失败者，都想成为“一将功成万骨枯”中的“将”，而成功也正如这句话一样没有那么简单。对个人而言，更重要的是如何在社会存活下去，甚至完成更高的作为。因此必须要学会竞争，必须要学会如何去赢。粗读一遍《胜者思维》，给自己的大致体会是“胜者思维”也就是“战略思维”，所以大致有以下几个问题</p><ul><li>什么战略思维</li><li>战略思维有什么作用</li><li>怎么培养战略思维</li></ul><p>这需要详细阅读后进行总结，现在的话对书中的笔记进行部分摘录：</p><p>1.美国国会众议员军事委员会对军人的标准：</p><p>  a）第一：必须具有分析能力，能够超越孤立的事实或者某一领域专长，看到并整理出事物之间的互相联系</p><p>  b）第二：必须是实用主义，能够有意识地重新构建自己的战略模式，使之符合形式和实际的需要。</p><p>  c）第三：必须具有创造性，经常要挑战现状</p><p>  d）第四：必须接受过多种教育，是通才，而不是专才</p><ol start="2"><li><p>真正研究胜道者，关键是要从琢磨别人怎么失败的而不是研究人家怎么样胜利的入手。真正明白别人是怎么失败的，才能悟出你怎样避免失败，然后才能取胜</p></li><li><p>上级可以欺骗；部属可以欺骗；百姓可以欺骗；只有敌人欺骗不了</p></li><li><p>真正推动军事变革的，不是军事思想，而是军事技术</p></li><li><p>过去是大吃小，现在是快吃慢</p></li><li><p>美军反复强调绝不与对手公平较量</p></li><li><p>一切伟大思想都是简单明了的，诀窍在于赶在别人面前明白它</p></li><li><p>问题是带人走出困境的最好向导，危机是教人进行创造的最好老师</p></li><li><p>西方战略学鼻祖克劳塞维茨认为真正的领导者须具备两大条件：第一是在黑暗时刻发现微光能力；第二是敢于跟随这线微光前进的勇气。</p></li><li><p>领导：第一提供思想，第二提供意志</p></li><li><p>危机时最容易看出一个人的本色，这种本色，我觉得对我们来说，就是一个非常明显的展现，就是在权利中展现你的本性</p></li><li><p>今天的实践非常重要，关键性的重大活动是否参与过、关键时刻的关键作为，成为你晋升的重要资本，这就是局部对整体的拯救。</p></li><li><p>危机中最需要权威，危机中又最缺乏领导权威，危机中一旦缺乏权威，就会带来各种各样的倾向</p></li><li><p>当你在犹豫不决的时候，当你不知道该怎么办的时候，你要知道失败的种子已经在生根、发芽、开花、结果，一步一步长大，导致你失败</p></li><li><p>OODA循环，一个快速反应、决策的链条</p></li><li><p>危机处理失控最常见的因素就是领导者缺位</p></li><li><p>站出来，你就是主心骨，即便你连怎么处置都没有想好，也得站出来</p></li><li><p>积极不一定能够控制事态，但是不积极肯定会让危机处理进入失控的状态，因此，积极是控制危机的前提</p></li><li><p>行动要积极，目标要节制，不要想一口吃个大胖子。节制目标，关键来自于力量，力量的有限性决定了目标的有限性，力量与目标之间的距离就是风险。你的目标很高，你的力量达不成，你的风险就不可控了。</p></li><li><p>必须得分权，必须让一线人员又积极性，主动性和创造性，怎么把一线人员的积极性，主动性、创造性调动起来？关键是第一要分权，分权要给出清晰的目标，不是漫无边际把权利都分出去，而是要针对目标分权；第二，做出必要的限制，是有限分权，而不是无限制地授权；第三，配以适当的资源，不是大笔一挥，把某某某问题交给某某某处理，你必须完成给某某处理问题的资源配置；第四最重要，授权不授责，如果授权也受责，权利交给你，好自为之，出了事，你负责，第一线人也不行动。</p></li><li><p>决策者越是敢于担当，将士越是勇于担当</p></li><li><p>真正的问题永远难以解决，最高的境界实际上就是转换</p></li><li><p>情况越明了，不确定性越小，领导艺术发挥的空间也越小，反之，不确定性大，领导艺术发挥的空间也越大。</p></li><li><p>社会存在决定社会意识，没有这个存在，就没有这个意识</p></li><li><p>最好的反危机策略就是以危机对付危机</p></li><li><p>在战略思维过程中，始终要面对威胁评估，始终要筹划力量的运用，始终要思考优劣转换。作为谋取优势，争夺主导的精神活动，战略思维较量表现的矛盾对抗贯穿于整个战略思维过程的始终。战略本身就是对机遇的寻找，把握和利用。机遇是一种无形的资源，把握机遇就是要把握不确定性。大多数人讨厌不确定性，真正高超的领导艺术恰恰是利用不确定性。越是存在不确定性，主管能动性发挥的空间也就越大。</p></li><li><p>领导者主要是对未来应有科学的预见，如果不能做到这一点，就不能成为有效的领导</p></li><li><p>战略思维是指思维主体对关系全局的、长远的、根本性的重大问题进行分析、预见、谋划、研判，并由此形成战略思想、战略规划和战略决策的思维活动。如果分析，预见、谋划、研判半天，最后一无所得，那就是空想思维，不是战略思维。战略思维最后一定会形成战略思想、战略规划和战略决策这样完整的思维活动。</p></li><li><p>战略思维的实质是什么，需要注意下面三点：</p><p>第一，战略问题与战略思维的关系。存在决定意识。又战略问题，才有战略思维，战略思维的出发点是一定要有问题。</p><p>第二，战略思想和战略思维的区别，思想是头脑中的一种客观存在，思维确实永不止息的。思维阶段性的固定成果成为思想。</p><p>第三，战略文化与战略思维的关系。不同的战略问题，战略思维也是不一样的。</p></li><li><p>冲突与征服的精神是西方民族主义的根源和核心，它的基础不是社会合作。</p></li><li><p>我们想维护大局，大局是什么呢？其实我们讲的大局就是别出事，双方平平安安的，顺顺畅畅的，和平交往，这就是大局。</p></li><li><p>敢于而且善于维护自己的利益，才能在对方那里得到更大的尊重。</p></li><li><p>国力&#x3D;（资源力+经济实力+军事实力）* （国家战略+国家意志）</p></li><li><p>国家利益是战略思维的出发点、战略归宿点。如果战略思维不以国家利益为出发点、为归宿点，就不能称为有效的战略思维。</p></li><li><p>从某种意义上说，战略本身就是对机遇的寻找，把握和利用</p></li><li><p>胆略的本质是敢于承担风险，是思维主体在把握现实和认知未来之间表现出的勇于担当。</p></li><li><p>过去讲，人的能力是信息存储能力，今天，人的能力是信息筛选能力。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《胜者思维》笔记&lt;/p&gt;
&lt;p&gt;毫无以为每个人都想成为胜利者，而不想成为失败者，都想成为“一将功成万骨枯”中的“将”，而成功也正如这句话一样没有那么简单。对个人而言，更重要的是如何在社会存活下去，甚至完成更高的作为。因此必须要学会竞争，必须要学会如何去赢。粗读一遍《胜者思维</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/01/09/Glide%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2023/01/09/Glide%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2023-01-09T14:02:30.296Z</published>
    <updated>2023-01-09T15:15:39.053Z</updated>
    
    <content type="html"><![CDATA[<p>Glide源码分析（一）</p><p>首先分析的便是Glide.java，作为开发人员直接对接的api接口，里面的东西需要仔细看看</p><p>在大致过一遍Glide.java的源码后，总体上的印象有下面几个角度</p><ul><li><p>设计模式</p><ul><li><p>单例模式</p><p>Glide的创建采用了单例的双重校验锁方法</p></li><li><p>创建者模式</p><p>Glide中成员变量registry的类型为Registry，其创建不断调用了append方法，也就是创建者模式，这点通过对比前面的版本可以发现，是相当于对之前直接注册方式的一个优化</p></li></ul></li><li><p>缓存设计</p><p>包括BitmapPool和MemoryCache的设计</p></li></ul><p>由于对缓存设计相对较感兴趣，先看下缓存的设计</p><h2 id="BitmapPool"><a href="#BitmapPool" class="headerlink" title="BitmapPool"></a>BitmapPool</h2><p>首先看下接口设计</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BitmapPool</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="type">long</span> <span class="title function_">getMaxSize</span><span class="params">()</span>; <span class="comment">//获取最大大小</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Multiplies the initial size of the pool by the given multiplier to dynamically and</span></span><br><span class="line"><span class="comment">   * synchronously allow users to adjust the size of the pool.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * &lt;p&gt;If the current total size of the pool is larger than the max size after the given multiplier</span></span><br><span class="line"><span class="comment">   * is applied, &#123;<span class="doctag">@link</span> Bitmap&#125;s should be evicted until the pool is smaller than the new max size.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> sizeMultiplier The size multiplier to apply between 0 and 1.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">void</span> <span class="title function_">setSizeMultiplier</span><span class="params">(<span class="type">float</span> sizeMultiplier)</span>; <span class="comment">//设置增长比率</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(Bitmap bitmap)</span>; <span class="comment">//存bitmap</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@NonNull</span></span><br><span class="line">  Bitmap <span class="title function_">get</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height, Bitmap.Config config)</span>; <span class="comment">//获取bitmap</span></span><br><span class="line"></span><br><span class="line">  Bitmap <span class="title function_">getDirty</span><span class="params">(<span class="type">int</span> width, <span class="type">int</span> height, Bitmap.Config config)</span>; <span class="comment">//比直接get要快</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> <span class="title function_">clearMemory</span><span class="params">()</span>; <span class="comment">//清除内存</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>glide通过创建这模式创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Glide glide = builder.build(applicationContext);</span><br></pre></td></tr></table></figure><p>在build方法中，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (bitmapPool == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> memorySizeCalculator.getBitmapPoolSize();</span><br><span class="line">    <span class="keyword">if</span> (size &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      bitmapPool = <span class="keyword">new</span> <span class="title class_">LruBitmapPool</span>(size);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      bitmapPool = <span class="keyword">new</span> <span class="title class_">BitmapPoolAdapter</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>因此，bitmappool的实现有两种，分别是LruBitmapPool和BitmapPoolAdapter</p><p>下面分别分析</p><p>参考博文：<a href="https://www.jianshu.com/p/9c040a0716b3?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">https://www.jianshu.com/p/9c040a0716b3?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Glide源码分析（一）&lt;/p&gt;
&lt;p&gt;首先分析的便是Glide.java，作为开发人员直接对接的api接口，里面的东西需要仔细看看&lt;/p&gt;
&lt;p&gt;在大致过一遍Glide.java的源码后，总体上的印象有下面几个角度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;设计模式&lt;/p&gt;
&lt;ul</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/01/04/Android%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2023/01/04/Android%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AD%A6%E4%B9%A0/</id>
    <published>2023-01-04T14:26:20.536Z</published>
    <updated>2023-01-04T14:27:51.627Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android虚拟机学习"><a href="#Android虚拟机学习" class="headerlink" title="Android虚拟机学习"></a>Android虚拟机学习</h1><p>虚拟机启动-&gt;类加载-&gt;执行-&gt;gc回收</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Android虚拟机学习&quot;&gt;&lt;a href=&quot;#Android虚拟机学习&quot; class=&quot;headerlink&quot; title=&quot;Android虚拟机学习&quot;&gt;&lt;/a&gt;Android虚拟机学习&lt;/h1&gt;&lt;p&gt;虚拟机启动-&amp;gt;类加载-&amp;gt;执行-&amp;gt;gc回收&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2023/01/03/%E5%95%86%E4%B8%9A%E5%85%AC%E5%8F%B8%E5%8F%8A%E5%85%B6slogan/"/>
    <id>http://example.com/2023/01/03/%E5%95%86%E4%B8%9A%E5%85%AC%E5%8F%B8%E5%8F%8A%E5%85%B6slogan/</id>
    <published>2023-01-03T13:49:29.715Z</published>
    <updated>2023-01-03T14:07:21.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="商业公司及其slogan"><a href="#商业公司及其slogan" class="headerlink" title="商业公司及其slogan"></a>商业公司及其slogan</h1><ul><li>VRBO: Where Families Travel Better Together</li><li>Dollar Shave Club: Shave Time.Shave Money</li><li>MasterCard: There are some things money can’t buy.For everything else, there’s MasterCard.</li><li>M&amp;M: Melt in Your Mouth, Not in Your Hands.</li><li>De Beers: A Diamond Is Forever</li><li>Meow Mix: Tastes So Good, Cats Ask For It By Name</li><li>The U.S. Marine Corp: Semper Fi</li><li>Allstate: You’re in Good Hands With AllState</li><li>Ronseal: It Does Exactly What It Says on The Tin</li><li>The Mosaic Company: We Help the World Grow the Food It Need</li><li>Pitney Bowes: We Power Transactions That Drive Commerce</li><li>Target: Expect More. Pay less</li><li>Verizon: 5G Built Right</li><li>Nike: Just Do It</li><li>Apple: Think Different</li><li>L’Oreal Paris: Because You’re Worth It</li><li>California Milk Processor Board: Got Milk?</li><li>BMW: Design for Driving Pleasure</li><li>Tesco: Every Little Helps</li><li>Bounty: The Quicker Picker Upper</li><li>Lay’s: Betcha Can’t Eat Just One</li><li>Audi: Advancement Through Technology</li><li>Dunkin: America Runs on Dunkin</li><li>McDonald’s: I’m Lovin’ It</li><li>The New York Times: All The News That’s Fit to Print</li><li>General Electric: Imagination At Work</li><li>State Farm: Like a Good Neighbor, State Farm is There</li><li>AMD: The Future is Fusion</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;商业公司及其slogan&quot;&gt;&lt;a href=&quot;#商业公司及其slogan&quot; class=&quot;headerlink&quot; title=&quot;商业公司及其slogan&quot;&gt;&lt;/a&gt;商业公司及其slogan&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;VRBO: Where Families Tra</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/12/23/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/"/>
    <id>http://example.com/2022/12/23/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/</id>
    <published>2022-12-23T10:02:49.372Z</published>
    <updated>2023-02-12T14:33:30.806Z</updated>
    
    <content type="html"><![CDATA[<p>职业规划</p><h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>1.<B>能够独立或者协同完成公司的产品开发，并完成迭代优化</B></p><p>2.结合业务特点深入挖掘用户需求</p><p>3.领导业务成长</p><h2 id="技术能力"><a href="#技术能力" class="headerlink" title="技术能力"></a>技术能力</h2><p>1.Android framework</p><p>2.三方框架</p><p>3.虚拟机</p><p>4.性能优化</p><h2 id="沟通能力"><a href="#沟通能力" class="headerlink" title="沟通能力"></a>沟通能力</h2><p>1.向上跟老板汇报</p><p>麦肯锡工作法</p><p>2.同级之间协调</p><p>3.任务安排</p><p>1）如何写出优秀的代码？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;职业规划&lt;/p&gt;
&lt;h1 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h1&gt;&lt;p&gt;1.&lt;B&gt;能够独立或者协同完成公司的产品开发，并完成迭代优化&lt;/B&gt;&lt;/p&gt;
&lt;p&gt;2.结合业务特点深入挖掘用户需求</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/12/13/JNI%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2022/12/13/JNI%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2022-12-13T14:40:03.378Z</published>
    <updated>2022-12-13T15:01:27.395Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JNI学习（一）"><a href="#JNI学习（一）" class="headerlink" title="JNI学习（一）"></a>JNI学习（一）</h1><p>基础系列</p><p><a href="https://cloud.tencent.com/developer/article/2123817">https://cloud.tencent.com/developer/article/2123817</a></p><ol><li>jni基础数据类型</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">uint8_t</span>  jboolean; <span class="comment">/* unsigned 8 bits */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int8_t</span>   jbyte;    <span class="comment">/* signed 8 bits */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint16_t</span> jchar;    <span class="comment">/* unsigned 16 bits */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int16_t</span>  jshort;   <span class="comment">/* signed 16 bits */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int32_t</span>  jint;     <span class="comment">/* signed 32 bits */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int64_t</span>  jlong;    <span class="comment">/* signed 64 bits */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">float</span>    jfloat;   <span class="comment">/* 32-bit IEEE 754 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span>   jdouble;  <span class="comment">/* 64-bit IEEE 754 */</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>引用类型</p><p>可以看到基类都是_jobject</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">_jobject</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jclass</span> : <span class="keyword">public</span> _jobject &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jstring</span> : <span class="keyword">public</span> _jobject &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jarray</span> : <span class="keyword">public</span> _jobject &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jobjectArray</span> : <span class="keyword">public</span> _jarray &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jbooleanArray</span> : <span class="keyword">public</span> _jarray &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jbyteArray</span> : <span class="keyword">public</span> _jarray &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jcharArray</span> : <span class="keyword">public</span> _jarray &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jshortArray</span> : <span class="keyword">public</span> _jarray &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jintArray</span> : <span class="keyword">public</span> _jarray &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jlongArray</span> : <span class="keyword">public</span> _jarray &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jfloatArray</span> : <span class="keyword">public</span> _jarray &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jdoubleArray</span> : <span class="keyword">public</span> _jarray &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">_jthrowable</span> : <span class="keyword">public</span> _jobject &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> _jobject*       jobject;</span><br><span class="line"><span class="keyword">typedef</span> _jclass*        jclass;</span><br><span class="line"><span class="keyword">typedef</span> _jstring*       jstring;</span><br><span class="line"><span class="keyword">typedef</span> _jarray*        jarray;</span><br><span class="line"><span class="keyword">typedef</span> _jobjectArray*  jobjectArray;</span><br><span class="line"><span class="keyword">typedef</span> _jbooleanArray* jbooleanArray;</span><br><span class="line"><span class="keyword">typedef</span> _jbyteArray*    jbyteArray;</span><br><span class="line"><span class="keyword">typedef</span> _jcharArray*    jcharArray;</span><br><span class="line"><span class="keyword">typedef</span> _jshortArray*   jshortArray;</span><br><span class="line"><span class="keyword">typedef</span> _jintArray*     jintArray;</span><br><span class="line"><span class="keyword">typedef</span> _jlongArray*    jlongArray;</span><br><span class="line"><span class="keyword">typedef</span> _jfloatArray*   jfloatArray;</span><br><span class="line"><span class="keyword">typedef</span> _jdoubleArray*  jdoubleArray;</span><br><span class="line"><span class="keyword">typedef</span> _jthrowable*    jthrowable;</span><br><span class="line"><span class="keyword">typedef</span> _jobject*       jweak;</span><br></pre></td></tr></table></figure></li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JNI学习（一）&quot;&gt;&lt;a href=&quot;#JNI学习（一）&quot; class=&quot;headerlink&quot; title=&quot;JNI学习（一）&quot;&gt;&lt;/a&gt;JNI学习（一）&lt;/h1&gt;&lt;p&gt;基础系列&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cloud.tencent.com</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/12/12/Context/"/>
    <id>http://example.com/2022/12/12/Context/</id>
    <published>2022-12-12T15:01:46.752Z</published>
    <updated>2022-12-12T15:01:46.752Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h1><ol><li><p>什么是Context</p><p>涉及应用环境的全局信息，抽象类。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Context&quot;&gt;&lt;a href=&quot;#Context&quot; class=&quot;headerlink&quot; title=&quot;Context&quot;&gt;&lt;/a&gt;Context&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;什么是Context&lt;/p&gt;
&lt;p&gt;涉及应用环境的全局信息，抽象类。&lt;/p&gt;
&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/11/13/Android%20%E6%A1%86%E6%9E%B6/"/>
    <id>http://example.com/2022/11/13/Android%20%E6%A1%86%E6%9E%B6/</id>
    <published>2022-11-13T07:32:22.416Z</published>
    <updated>2022-11-21T14:53:59.774Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-框架"><a href="#Android-框架" class="headerlink" title="Android 框架"></a>Android 框架</h1><ul><li><p>网络架构</p><p>Okhttp, Retrofit</p></li><li><p>多线程</p><p>Rxjava&#x2F;EventBus</p></li><li><p>Jetpack</p><p>mvvm</p></li><li><p>图片加载</p><p>Glide</p></li></ul><h2 id="Rxjava-响应式编程"><a href="#Rxjava-响应式编程" class="headerlink" title="Rxjava 响应式编程"></a>Rxjava 响应式编程</h2><p>解决流式问题</p><h2 id="kotlin-语法"><a href="#kotlin-语法" class="headerlink" title="kotlin 语法"></a>kotlin 语法</h2><ol><li>@get:JvmName</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Android-框架&quot;&gt;&lt;a href=&quot;#Android-框架&quot; class=&quot;headerlink&quot; title=&quot;Android 框架&quot;&gt;&lt;/a&gt;Android 框架&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;网络架构&lt;/p&gt;
&lt;p&gt;Okhttp, Retrofit&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/11/06/%E5%85%B3%E4%BA%8E%E8%AE%A1%E5%88%92%E7%9A%84%E8%AE%A8%E8%AE%BA/"/>
    <id>http://example.com/2022/11/06/%E5%85%B3%E4%BA%8E%E8%AE%A1%E5%88%92%E7%9A%84%E8%AE%A8%E8%AE%BA/</id>
    <published>2022-11-06T12:56:35.765Z</published>
    <updated>2022-12-13T14:39:29.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于规划的讨论"><a href="#关于规划的讨论" class="headerlink" title="关于规划的讨论"></a>关于规划的讨论</h1><p>古人说：“凡事预则立，不预则废”</p><p>这句话在今天也是不过时的。那么下面讨论下规划的必要性，规划的原则（如何进行规划）</p><h2 id="规划必要性"><a href="#规划必要性" class="headerlink" title="规划必要性"></a>规划必要性</h2><p>凡事如果不进行规划，那么做事就跟不懂设计模式来写代码一样，没有章法，自然也做不好。即便做好了也没多少有价值的东西积累。</p><p>这里其实还有个问题，我们的目标也就是我们要做的事。一种情况可能是出于自身的需求，一种可能来源于外部的需求。目标定高了难以完成自然会打击自己的信心，定低的话太容易完成，没啥挑战性，就会容易滋生自满的情绪，影响自己的进步。</p><h2 id="1-确定目标"><a href="#1-确定目标" class="headerlink" title="1.确定目标"></a>1.确定目标</h2><p>目标如何确定？</p><p>a）首先要知道自己想要什么（Target），其次自己当前相关的状态是怎么样的（Current State）</p><h2 id="2-拆解目标成可实施的步骤"><a href="#2-拆解目标成可实施的步骤" class="headerlink" title="2. 拆解目标成可实施的步骤"></a>2. 拆解目标成可实施的步骤</h2><p>从C-&gt;T进行拆解</p><h2 id="3-执行"><a href="#3-执行" class="headerlink" title="3.执行"></a>3.执行</h2><h2 id="4-总结反馈"><a href="#4-总结反馈" class="headerlink" title="4.总结反馈"></a>4.总结反馈</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;关于规划的讨论&quot;&gt;&lt;a href=&quot;#关于规划的讨论&quot; class=&quot;headerlink&quot; title=&quot;关于规划的讨论&quot;&gt;&lt;/a&gt;关于规划的讨论&lt;/h1&gt;&lt;p&gt;古人说：“凡事预则立，不预则废”&lt;/p&gt;
&lt;p&gt;这句话在今天也是不过时的。那么下面讨论下规划的必要性</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/11/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B7%E5%A4%A7%E5%8E%9F%E5%88%99/"/>
    <id>http://example.com/2022/11/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B7%E5%A4%A7%E5%8E%9F%E5%88%99/</id>
    <published>2022-11-05T09:41:29.343Z</published>
    <updated>2022-12-18T09:13:16.679Z</updated>
    
    <content type="html"><![CDATA[<pre><code>    第一次接触设计模式还是在大四那会，学校请一些培训老师给学生讲课，恰好有这门内容，刚开始还不以为然，那会还是2017年，一晃都2022年底了，毕业出来工作也有3年，一个感慨就是如果不努力自我提升，3年其实也没多大长进。当然技术也一样，而且还发展这么快。设计模式也是每次拿起，每次都有不同的感触，确实是值得反复揣摩。</code></pre><p>​设计模式七大原则（一种说法是六大）</p><ul><li>开闭原则</li><li>单一职责原则</li><li>接口隔离原则</li><li>迪米法特原则</li><li>里氏替换原则</li><li>依赖倒置原则</li><li>合成复用原则</li></ul><p>如何记住这几个原则，一开始也是记住了这个忘记了另外一个，每次看书或者博客也是当时可能记住了，其实都是没有真正理解。理解之后几个原则都是可推导的。</p><p>都知道java是面向对象的，这个是刚开始学习java的时候就接触到的，具有三大特性，即继承、封装、多态，可以说是java中的一个哲学。<br>既然是面向对象的，那必然涉及到对象间的交流。如果不进行总结，从使用经验来看，有以下几种，</p><ul><li>extend 继承</li><li>做为另外一个对象的内部属性</li><li>做为方法变量</li><li>做为局部变量</li><li>Implements实现</li></ul><p>这种是基础的语法，也是直观的感受，对写代码也没有啥指导意义，对进一步的架构设计就更没啥意义了。</p><p>如果看过书或者百度，就会知道分为以下几种，也是对上面的几种物理形式做了思想层面的总结</p><ul><li><p>继承：直接extend</p></li><li><p>实现：直接implements</p></li><li><p>关联：表现方式为作为内部成员变量</p><ul><li>组合：整体和局部，局部跟整体不可分割</li><li>聚合：整体和部分，部分可脱离整体存在</li></ul></li><li><p>依赖</p><p>表现方式为作为方法参数</p></li></ul><p>其中，关联，组合，聚合着几种关系的真正理解也是最近的事。百度类与类之间关系的时候，给的解释大概也是上面的解释了，如果不做进一步的思考的话，上面关于组合和聚合的解释也是两句废话，跟写代码有什么关系呢？</p><p>其实，<b> 聚合和组合的区别上面只是思想层面，结合代码来说也就是，聚合的对象是可分离的，那么聚合的对象就可能被别的对象引用，从写代码的角度来说，它是作为变量的方式传进来，如从构造方法，或者set方法来给对象的属性进行赋值；而组合对象，由于对象之间不可分离，那么它只能new 一个实例出来给属性进行赋值,进一步说，这个涉及到了对象的生命周期的管理</b></p><p>所以组合的耦合性要比聚合高，总体上而言，<b>继承&gt; 实现 &gt; 组合&gt;聚合&gt;依赖</b></p><p>上面也说到了java是面向对象的，那么为了更容易的进行开发和维护，我们肯定是希望工程后续修改和维护简单快速，因此，<b>高可扩展</b>（ 跟<b>解耦</b>合一个意思），便是我们在完成项目的时候第一要义，因此我们需呀进行架构设计，怎么设计？那么7大原则便是前人总结出来的经验。</p><ul><li>外观模式</li></ul><p>外观模式使用的频率比较高，尤其在三方SDK中，大概率会使用外观模式，用于屏蔽子系统的复杂性。要求外部跟内部的通信必须通过一个统一的接口来进行。门面模式（Facade）提供一个<B>高层次的接口</B>，方便子系统的使用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;    第一次接触设计模式还是在大四那会，学校请一些培训老师给学生讲课，恰好有这门内容，刚开始还不以为然，那会还是2017年，一晃都2022年底了，毕业出来工作也有3年，一个感慨就是如果不努力自我提升，3年其实也没多大长进。当然技术也一样，而且还发展这么快。</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>无题（一）</title>
    <link href="http://example.com/2022/09/16/%E6%97%A0%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2022/09/16/%E6%97%A0%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2022-09-16T14:25:56.000Z</published>
    <updated>2022-09-24T15:02:18.847Z</updated>
    
    <content type="html"><![CDATA[<p>​主要是想记录一下读《明朝那些事》一书后的一些感受。虽然早就听说这本书书，但是对于有拖延症的自己来说，也迟迟没有打开。第一次打开的时候也只是潦草看了几眼，因为太多了，没点耐心还看不了。直到不久前，耐着性子看了前面几节，禁不住感叹写的实在是太好了，吃饭看，下班也看，不知不觉看了三分之二。当然，为什么觉得这么好看，一个是书中从“人性”的角度来描述了一个不一样的明朝，能让人感受到“人”的温度，更接地气，不像历史课本那样无聊；其二，或多或少能从书中找到一些自己的影子，也许这才是深深吸引自己的地方。</p><p>​朱元璋：明朝的创始人，真正开局一个碗。身世凄惨，前期打各种零工，还到庙里当和尚，然后被逼着去谋反。说到这，常说“穷人的孩子早当家”，其实也都是迫不得已的事，被逼着提前但起大人的责任，也容易歪曲三观（情不自禁想起自己小时候家里条件也不咋地）。贫穷和苦难未必能锻炼一个人，被这样的环境毁掉的也大有人在，能正常成长已属不易，有一番作为我觉得更是难上加难了。当然，对于朱重八同志我也是比较好奇的，另外我也没时间去仔细调查他到底经历了什么。书中描述他投靠郭子兴时，“但在这个人的眼睛里，他看到的只有镇定”，接着“比起其他的农民兵士，他是一个很突出的人，不但作战勇敢，而且很有计谋，处事冷静，思虑深远（注意这个特点），还很讲义气，有危险的时候第一个上，这一切都让他有了崇高的威信。” 。所以，至少能判断，朱重八同志应该是个十分有气场的人，而且外露。或许他没有在前期接受到好的科学教育，但是这些困难对于他的秉性、智慧和魄力，我觉得应该是得到很好的锻炼的。他应该是一个身体素质很好的人，常常思考，而且很有判断力，还是一个有追求的人。不然也不可能除了打仗厉害，还有头脑，更重要的是会做事，这个我觉得除了头脑外，更要有强大的人格，比如胆大，做事果断，隐忍，甚至无赖等等，综合起来，我觉得叫“厚黑”更合适一点，关于“厚黑”，这个应该可以另开一个篇章了，后面肯定也要写相关的文章，这些在后面其他人身上也能看到，但凡在庙堂上呼风唤雨的人，其“厚黑”程度都远超常人。而对于自己而言，“厚黑”程度就相当于白纸了，这玩意好像也确实要经历一些风雨才能锻炼出来。也足以说明朱同志的优秀了。</p><p>​其次，朱同志还会识人，跟郭子兴分别时，“他从自己的七百人中重新挑选了二十四个人”，“他挑得确实很准，看看这些人的名字：徐达、汤和、周德兴……这二十四个人后来都成为了明王朝的高级干部。”。可见朱同志的眼光十分狠。当然，我也不知道他挑人的依据是什么，但有两点应该可以确认，一个是个人能力强，会打仗，能打胜仗；其次，都跟他一样是个有魄力的人。就好比要一个人要创业找自己的合伙人，肯定是想找一些厉害的，要么“多金”，要么“多才”，重要的是能做成事，能把这个公司办起来，办长远。那么就要做很多事了，比如确定公司的定位，发展方向&#x2F;是否有发展前景，竞争能力等等，要做好足够的市场调研。这些完成后应该就要进行产品研发了。</p><p>​说到这里忍不住插几句，为什么讨论朱元璋以及后面其他人物的事迹，主要目的还是为了学习他们做人的手段，“做事”这个就不总结了，毕竟跟我干的事也不一样。讲道理，这个也不知道应该从哪里说起，情不自禁想起一句话，“天下熙熙皆为利来，天下攘攘皆为利往”，个人的社会活动大概都逃不出这个定律吧。从朱元璋的角度，想要给子孙留一个稳定的王朝，从严嵩的角度，要的是一人之下的权利和荣华富贵，从海瑞的角度，要的是一个没有腐败的朝廷。“人”本身就是复杂，充满了各种欲望和矛盾，从这些历史人物中也都能看到自己的影子，另外，对于“事”，觉得“具体问题具体分析”这个讲的非常好。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​		主要是想记录一下读《明朝那些事》一书后的一些感受。虽然早就听说这本书书，但是对于有拖延症的自己来说，也迟迟没有打开。第一次打开的时候也只是潦草看了几眼，因为太多了，没点耐心还看不了。直到不久前，耐着性子看了前面几节，禁不住感叹写的实在是太好了，吃饭看，下班也看，不知不</summary>
      
    
    
    
    <category term="杂记" scheme="http://example.com/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://example.com/2022/09/13/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2022/09/13/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-09-13T15:50:16.000Z</published>
    <updated>2023-04-05T06:36:22.386Z</updated>
    
    <content type="html"><![CDATA[<center>想说点什么，却又什么都想说</center>]]></content>
    
    
      
      
    <summary type="html">&lt;center&gt;想说点什么，却又什么都想说&lt;/center&gt;
</summary>
      
    
    
    
    <category term="杂记" scheme="http://example.com/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
