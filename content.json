{"meta":{"title":"东的博客","subtitle":"","description":"","author":"东","url":"http://example.com","root":"/"},"pages":[{"title":"我的博客","date":"2022-09-13T15:51:12.000Z","updated":"2022-09-13T15:51:12.896Z","comments":true,"path":"我的博客/index.html","permalink":"http://example.com/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/index.html","excerpt":"","text":""},{"title":"文章分类","date":"2022-09-15T13:53:14.000Z","updated":"2022-09-15T13:57:44.359Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2022-09-15T14:03:42.000Z","updated":"2022-09-15T14:04:12.286Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"关于","date":"2022-09-15T14:11:36.000Z","updated":"2022-09-15T14:16:03.185Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"邮箱: &#122;&#120;&#100;&#x6f;&#x6e;&#103;&#x31;&#x32;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#109;"}],"posts":[{"title":"","slug":"Untitled","date":"2023-02-12T03:30:59.545Z","updated":"2023-02-12T03:30:59.545Z","comments":true,"path":"2023/02/12/Untitled/","link":"","permalink":"http://example.com/2023/02/12/Untitled/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"","slug":"Q&A","date":"2023-01-29T09:40:23.652Z","updated":"2023-04-02T06:33:47.377Z","comments":true,"path":"2023/01/29/Q&A/","link":"","permalink":"http://example.com/2023/01/29/Q&A/","excerpt":"","text":"Q&amp;A 1.29 什么事战略思维？什么机会？如何做好战略？ 1.30 1）面试问题整理 2）沟通技巧研究。完成新河大学沟通部分课程 3）注意事物的属性，通过属性完成类别划分，而分类又是事物研究的重要方法之一 4）问题解决方法： 1.重新定义问题，使其具备可操作性 2.问题划分，分成子问题 3重复步骤2直到具备可操作性 1.31 阅读训练 2）通过断点方式查看栈帧，快速完成业务逻辑梳理 3）熟悉activity的启动过程和窗口视图的显示过程 2.1 1）阅读训练 a. 绕口令 b.口部操 c.咬字尽量用力，清晰 2）了解View surface绘制过程，加强训练，如自定义view等 2.4 阅读训练 2）结构化战略思维：MECE原则 麦肯锡问题解决五步法：定义问题 -&gt; 结构化分析-&gt; 提出假设-&gt; 验证假设-&gt;交付 结构化战略思维四大原则： 方法论：1）MECE原则 ​ 2）假设为前提 行为准则：3）数字说话 ​ 4）洞见优于表象 方法论上是否运用了假设为前提，分析时是否遵守MECE原则 有没有运用到数字来进行说明举证 核心洞见时什么（或者说核心规律是什么，对于后面的行为有什么指导？） 2.6 1)阅读训练 2）任务执行，避免“就近原则”，要分清轻重缓急 3）积极参与到分配的任务执行中去 4）Binder通信过程学习 2.7 1.阅读训练 2.整理Binder知识点 由表及里：如何使用-&gt;涉及到的关键对象和方法-&gt;调用过程-&gt;底层数据结构设计 2.9 1.阅读训练 2.整理mvvm知识点，已完成 3.整理apt知识点，完成注解部分 4.加深对so的理解 2.12 1.阅读训练 2.实践是检验真理的唯一标准 或者说，场景是规律的载体，脱离了场景谈规律都是在扯淡 2.12 寻找可操作的东西，然后训练 1https://drive.google.com/uc?export=download&amp;id=1dF0Wq0atKTqr6AGUzvbmqrMvxytIrwP8 复制到剪贴板 Clash订阅链接 1vmess://ew0KICAidiI6ICIyIiwNCiAgInBzIjogIuKciCB3d3cub2FveS5uZXR86Iux5Zu9IiwNCiAgImFkZCI6ICJxdXJhbndlYjEueHl6IiwNCiAgInBvcnQiOiAiNDQzIiwNCiAgImlkIjogIjhiYmQ5MWZlLWEzMGItNGUyOS1iZmM3LWMyOGE0NGMwY2I4ZiIsDQogICJhaWQiOiAiMCIsDQogICJzY3kiOiAiYXV0byIsDQogICJuZXQiOiAid3MiLA0KICAidHlwZSI6ICJub25lIiwNCiAgImhvc3QiOiAiIiwNCiAgInBhdGgiOiAiL2N1cnJlbnRfdGltZSIsDQogICJ0bHMiOiAidGxzIiwNCiAgInNuaSI6ICIiLA0KICAiYWxwbiI6ICIiDQp9 1https://drive.google.com/uc?export=download&amp;id=1HvAXB8TfY2BsD_iZ1ITlyQI0F7g76KSP 复制到剪贴板 Clash订阅链接 https://v2rayshare.com/wp-content/uploads/2023/04/20230402.yaml","categories":[],"tags":[]},{"title":"","slug":"《胜者思维》笔记","date":"2023-01-29T06:27:49.660Z","updated":"2023-01-29T09:10:48.880Z","comments":true,"path":"2023/01/29/《胜者思维》笔记/","link":"","permalink":"http://example.com/2023/01/29/%E3%80%8A%E8%83%9C%E8%80%85%E6%80%9D%E7%BB%B4%E3%80%8B%E7%AC%94%E8%AE%B0/","excerpt":"","text":"《胜者思维》笔记 毫无以为每个人都想成为胜利者，而不想成为失败者，都想成为“一将功成万骨枯”中的“将”，而成功也正如这句话一样没有那么简单。对个人而言，更重要的是如何在社会存活下去，甚至完成更高的作为。因此必须要学会竞争，必须要学会如何去赢。粗读一遍《胜者思维》，给自己的大致体会是“胜者思维”也就是“战略思维”，所以大致有以下几个问题 什么战略思维 战略思维有什么作用 怎么培养战略思维 这需要详细阅读后进行总结，现在的话对书中的笔记进行部分摘录： 1.美国国会众议员军事委员会对军人的标准： a）第一：必须具有分析能力，能够超越孤立的事实或者某一领域专长，看到并整理出事物之间的互相联系 b）第二：必须是实用主义，能够有意识地重新构建自己的战略模式，使之符合形式和实际的需要。 c）第三：必须具有创造性，经常要挑战现状 d）第四：必须接受过多种教育，是通才，而不是专才 真正研究胜道者，关键是要从琢磨别人怎么失败的而不是研究人家怎么样胜利的入手。真正明白别人是怎么失败的，才能悟出你怎样避免失败，然后才能取胜 上级可以欺骗；部属可以欺骗；百姓可以欺骗；只有敌人欺骗不了 真正推动军事变革的，不是军事思想，而是军事技术 过去是大吃小，现在是快吃慢 美军反复强调绝不与对手公平较量 一切伟大思想都是简单明了的，诀窍在于赶在别人面前明白它 问题是带人走出困境的最好向导，危机是教人进行创造的最好老师 西方战略学鼻祖克劳塞维茨认为真正的领导者须具备两大条件：第一是在黑暗时刻发现微光能力；第二是敢于跟随这线微光前进的勇气。 领导：第一提供思想，第二提供意志 危机时最容易看出一个人的本色，这种本色，我觉得对我们来说，就是一个非常明显的展现，就是在权利中展现你的本性 今天的实践非常重要，关键性的重大活动是否参与过、关键时刻的关键作为，成为你晋升的重要资本，这就是局部对整体的拯救。 危机中最需要权威，危机中又最缺乏领导权威，危机中一旦缺乏权威，就会带来各种各样的倾向 当你在犹豫不决的时候，当你不知道该怎么办的时候，你要知道失败的种子已经在生根、发芽、开花、结果，一步一步长大，导致你失败 OODA循环，一个快速反应、决策的链条 危机处理失控最常见的因素就是领导者缺位 站出来，你就是主心骨，即便你连怎么处置都没有想好，也得站出来 积极不一定能够控制事态，但是不积极肯定会让危机处理进入失控的状态，因此，积极是控制危机的前提 行动要积极，目标要节制，不要想一口吃个大胖子。节制目标，关键来自于力量，力量的有限性决定了目标的有限性，力量与目标之间的距离就是风险。你的目标很高，你的力量达不成，你的风险就不可控了。 必须得分权，必须让一线人员又积极性，主动性和创造性，怎么把一线人员的积极性，主动性、创造性调动起来？关键是第一要分权，分权要给出清晰的目标，不是漫无边际把权利都分出去，而是要针对目标分权；第二，做出必要的限制，是有限分权，而不是无限制地授权；第三，配以适当的资源，不是大笔一挥，把某某某问题交给某某某处理，你必须完成给某某处理问题的资源配置；第四最重要，授权不授责，如果授权也受责，权利交给你，好自为之，出了事，你负责，第一线人也不行动。 决策者越是敢于担当，将士越是勇于担当 真正的问题永远难以解决，最高的境界实际上就是转换 情况越明了，不确定性越小，领导艺术发挥的空间也越小，反之，不确定性大，领导艺术发挥的空间也越大。 社会存在决定社会意识，没有这个存在，就没有这个意识 最好的反危机策略就是以危机对付危机 在战略思维过程中，始终要面对威胁评估，始终要筹划力量的运用，始终要思考优劣转换。作为谋取优势，争夺主导的精神活动，战略思维较量表现的矛盾对抗贯穿于整个战略思维过程的始终。战略本身就是对机遇的寻找，把握和利用。机遇是一种无形的资源，把握机遇就是要把握不确定性。大多数人讨厌不确定性，真正高超的领导艺术恰恰是利用不确定性。越是存在不确定性，主管能动性发挥的空间也就越大。 领导者主要是对未来应有科学的预见，如果不能做到这一点，就不能成为有效的领导 战略思维是指思维主体对关系全局的、长远的、根本性的重大问题进行分析、预见、谋划、研判，并由此形成战略思想、战略规划和战略决策的思维活动。如果分析，预见、谋划、研判半天，最后一无所得，那就是空想思维，不是战略思维。战略思维最后一定会形成战略思想、战略规划和战略决策这样完整的思维活动。 战略思维的实质是什么，需要注意下面三点： 第一，战略问题与战略思维的关系。存在决定意识。又战略问题，才有战略思维，战略思维的出发点是一定要有问题。 第二，战略思想和战略思维的区别，思想是头脑中的一种客观存在，思维确实永不止息的。思维阶段性的固定成果成为思想。 第三，战略文化与战略思维的关系。不同的战略问题，战略思维也是不一样的。 冲突与征服的精神是西方民族主义的根源和核心，它的基础不是社会合作。 我们想维护大局，大局是什么呢？其实我们讲的大局就是别出事，双方平平安安的，顺顺畅畅的，和平交往，这就是大局。 敢于而且善于维护自己的利益，才能在对方那里得到更大的尊重。 国力&#x3D;（资源力+经济实力+军事实力）* （国家战略+国家意志） 国家利益是战略思维的出发点、战略归宿点。如果战略思维不以国家利益为出发点、为归宿点，就不能称为有效的战略思维。 从某种意义上说，战略本身就是对机遇的寻找，把握和利用 胆略的本质是敢于承担风险，是思维主体在把握现实和认知未来之间表现出的勇于担当。 过去讲，人的能力是信息存储能力，今天，人的能力是信息筛选能力。","categories":[],"tags":[]},{"title":"","slug":"Glide源码分析（一）","date":"2023-01-09T14:02:30.296Z","updated":"2023-01-09T15:15:39.053Z","comments":true,"path":"2023/01/09/Glide源码分析（一）/","link":"","permalink":"http://example.com/2023/01/09/Glide%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%EF%BC%88%E4%B8%80%EF%BC%89/","excerpt":"","text":"Glide源码分析（一） 首先分析的便是Glide.java，作为开发人员直接对接的api接口，里面的东西需要仔细看看 在大致过一遍Glide.java的源码后，总体上的印象有下面几个角度 设计模式 单例模式 Glide的创建采用了单例的双重校验锁方法 创建者模式 Glide中成员变量registry的类型为Registry，其创建不断调用了append方法，也就是创建者模式，这点通过对比前面的版本可以发现，是相当于对之前直接注册方式的一个优化 缓存设计 包括BitmapPool和MemoryCache的设计 由于对缓存设计相对较感兴趣，先看下缓存的设计 BitmapPool首先看下接口设计 123456789101112131415161718192021222324public interface BitmapPool &#123; long getMaxSize(); //获取最大大小 /** * Multiplies the initial size of the pool by the given multiplier to dynamically and * synchronously allow users to adjust the size of the pool. * * &lt;p&gt;If the current total size of the pool is larger than the max size after the given multiplier * is applied, &#123;@link Bitmap&#125;s should be evicted until the pool is smaller than the new max size. * * @param sizeMultiplier The size multiplier to apply between 0 and 1. */ void setSizeMultiplier(float sizeMultiplier); //设置增长比率 void put(Bitmap bitmap); //存bitmap @NonNull Bitmap get(int width, int height, Bitmap.Config config); //获取bitmap Bitmap getDirty(int width, int height, Bitmap.Config config); //比直接get要快 void clearMemory(); //清除内存&#125; glide通过创建这模式创建 1Glide glide = builder.build(applicationContext); 在build方法中， 12345678if (bitmapPool == null) &#123; int size = memorySizeCalculator.getBitmapPoolSize(); if (size &gt; 0) &#123; bitmapPool = new LruBitmapPool(size); &#125; else &#123; bitmapPool = new BitmapPoolAdapter(); &#125; &#125; 因此，bitmappool的实现有两种，分别是LruBitmapPool和BitmapPoolAdapter 下面分别分析 参考博文：https://www.jianshu.com/p/9c040a0716b3?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation","categories":[],"tags":[]},{"title":"","slug":"Android虚拟机学习","date":"2023-01-04T14:26:20.536Z","updated":"2023-01-04T14:27:51.627Z","comments":true,"path":"2023/01/04/Android虚拟机学习/","link":"","permalink":"http://example.com/2023/01/04/Android%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AD%A6%E4%B9%A0/","excerpt":"","text":"Android虚拟机学习虚拟机启动-&gt;类加载-&gt;执行-&gt;gc回收","categories":[],"tags":[]},{"title":"","slug":"商业公司及其slogan","date":"2023-01-03T13:49:29.715Z","updated":"2023-01-03T14:07:21.147Z","comments":true,"path":"2023/01/03/商业公司及其slogan/","link":"","permalink":"http://example.com/2023/01/03/%E5%95%86%E4%B8%9A%E5%85%AC%E5%8F%B8%E5%8F%8A%E5%85%B6slogan/","excerpt":"","text":"商业公司及其slogan VRBO: Where Families Travel Better Together Dollar Shave Club: Shave Time.Shave Money MasterCard: There are some things money can’t buy.For everything else, there’s MasterCard. M&amp;M: Melt in Your Mouth, Not in Your Hands. De Beers: A Diamond Is Forever Meow Mix: Tastes So Good, Cats Ask For It By Name The U.S. Marine Corp: Semper Fi Allstate: You’re in Good Hands With AllState Ronseal: It Does Exactly What It Says on The Tin The Mosaic Company: We Help the World Grow the Food It Need Pitney Bowes: We Power Transactions That Drive Commerce Target: Expect More. Pay less Verizon: 5G Built Right Nike: Just Do It Apple: Think Different L’Oreal Paris: Because You’re Worth It California Milk Processor Board: Got Milk? BMW: Design for Driving Pleasure Tesco: Every Little Helps Bounty: The Quicker Picker Upper Lay’s: Betcha Can’t Eat Just One Audi: Advancement Through Technology Dunkin: America Runs on Dunkin McDonald’s: I’m Lovin’ It The New York Times: All The News That’s Fit to Print General Electric: Imagination At Work State Farm: Like a Good Neighbor, State Farm is There AMD: The Future is Fusion","categories":[],"tags":[]},{"title":"","slug":"职业规划","date":"2022-12-23T10:02:49.372Z","updated":"2023-02-12T14:33:30.806Z","comments":true,"path":"2022/12/23/职业规划/","link":"","permalink":"http://example.com/2022/12/23/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/","excerpt":"","text":"职业规划 目标1.能够独立或者协同完成公司的产品开发，并完成迭代优化 2.结合业务特点深入挖掘用户需求 3.领导业务成长 技术能力1.Android framework 2.三方框架 3.虚拟机 4.性能优化 沟通能力1.向上跟老板汇报 麦肯锡工作法 2.同级之间协调 3.任务安排 1）如何写出优秀的代码？","categories":[],"tags":[]},{"title":"","slug":"JNI学习（一）","date":"2022-12-13T14:40:03.378Z","updated":"2022-12-13T15:01:27.395Z","comments":true,"path":"2022/12/13/JNI学习（一）/","link":"","permalink":"http://example.com/2022/12/13/JNI%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/","excerpt":"","text":"JNI学习（一）基础系列 https://cloud.tencent.com/developer/article/2123817 jni基础数据类型 12345678typedef uint8_t jboolean; /* unsigned 8 bits */typedef int8_t jbyte; /* signed 8 bits */typedef uint16_t jchar; /* unsigned 16 bits */typedef int16_t jshort; /* signed 16 bits */typedef int32_t jint; /* signed 32 bits */typedef int64_t jlong; /* signed 64 bits */typedef float jfloat; /* 32-bit IEEE 754 */typedef double jdouble; /* 64-bit IEEE 754 */ 引用类型 可以看到基类都是_jobject 123456789101112131415161718192021222324252627282930class _jobject &#123;&#125;;class _jclass : public _jobject &#123;&#125;;class _jstring : public _jobject &#123;&#125;;class _jarray : public _jobject &#123;&#125;;class _jobjectArray : public _jarray &#123;&#125;;class _jbooleanArray : public _jarray &#123;&#125;;class _jbyteArray : public _jarray &#123;&#125;;class _jcharArray : public _jarray &#123;&#125;;class _jshortArray : public _jarray &#123;&#125;;class _jintArray : public _jarray &#123;&#125;;class _jlongArray : public _jarray &#123;&#125;;class _jfloatArray : public _jarray &#123;&#125;;class _jdoubleArray : public _jarray &#123;&#125;;class _jthrowable : public _jobject &#123;&#125;;typedef _jobject* jobject;typedef _jclass* jclass;typedef _jstring* jstring;typedef _jarray* jarray;typedef _jobjectArray* jobjectArray;typedef _jbooleanArray* jbooleanArray;typedef _jbyteArray* jbyteArray;typedef _jcharArray* jcharArray;typedef _jshortArray* jshortArray;typedef _jintArray* jintArray;typedef _jlongArray* jlongArray;typedef _jfloatArray* jfloatArray;typedef _jdoubleArray* jdoubleArray;typedef _jthrowable* jthrowable;typedef _jobject* jweak;","categories":[],"tags":[]},{"title":"","slug":"Context","date":"2022-12-12T15:01:46.752Z","updated":"2022-12-12T15:01:46.752Z","comments":true,"path":"2022/12/12/Context/","link":"","permalink":"http://example.com/2022/12/12/Context/","excerpt":"","text":"Context 什么是Context 涉及应用环境的全局信息，抽象类。","categories":[],"tags":[]},{"title":"","slug":"Android 框架","date":"2022-11-13T07:32:22.416Z","updated":"2022-11-21T14:53:59.774Z","comments":true,"path":"2022/11/13/Android 框架/","link":"","permalink":"http://example.com/2022/11/13/Android%20%E6%A1%86%E6%9E%B6/","excerpt":"","text":"Android 框架 网络架构 Okhttp, Retrofit 多线程 Rxjava&#x2F;EventBus Jetpack mvvm 图片加载 Glide Rxjava 响应式编程解决流式问题 kotlin 语法 @get:JvmName","categories":[],"tags":[]},{"title":"","slug":"关于计划的讨论","date":"2022-11-06T12:56:35.765Z","updated":"2022-12-13T14:39:29.264Z","comments":true,"path":"2022/11/06/关于计划的讨论/","link":"","permalink":"http://example.com/2022/11/06/%E5%85%B3%E4%BA%8E%E8%AE%A1%E5%88%92%E7%9A%84%E8%AE%A8%E8%AE%BA/","excerpt":"","text":"关于规划的讨论古人说：“凡事预则立，不预则废” 这句话在今天也是不过时的。那么下面讨论下规划的必要性，规划的原则（如何进行规划） 规划必要性凡事如果不进行规划，那么做事就跟不懂设计模式来写代码一样，没有章法，自然也做不好。即便做好了也没多少有价值的东西积累。 这里其实还有个问题，我们的目标也就是我们要做的事。一种情况可能是出于自身的需求，一种可能来源于外部的需求。目标定高了难以完成自然会打击自己的信心，定低的话太容易完成，没啥挑战性，就会容易滋生自满的情绪，影响自己的进步。 1.确定目标目标如何确定？ a）首先要知道自己想要什么（Target），其次自己当前相关的状态是怎么样的（Current State） 2. 拆解目标成可实施的步骤从C-&gt;T进行拆解 3.执行4.总结反馈","categories":[],"tags":[]},{"title":"","slug":"设计模式之7大原则","date":"2022-11-05T09:41:29.343Z","updated":"2022-12-18T09:13:16.679Z","comments":true,"path":"2022/11/05/设计模式之7大原则/","link":"","permalink":"http://example.com/2022/11/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B7%E5%A4%A7%E5%8E%9F%E5%88%99/","excerpt":"","text":"第一次接触设计模式还是在大四那会，学校请一些培训老师给学生讲课，恰好有这门内容，刚开始还不以为然，那会还是2017年，一晃都2022年底了，毕业出来工作也有3年，一个感慨就是如果不努力自我提升，3年其实也没多大长进。当然技术也一样，而且还发展这么快。设计模式也是每次拿起，每次都有不同的感触，确实是值得反复揣摩。 ​ 设计模式七大原则（一种说法是六大） 开闭原则 单一职责原则 接口隔离原则 迪米法特原则 里氏替换原则 依赖倒置原则 合成复用原则 如何记住这几个原则，一开始也是记住了这个忘记了另外一个，每次看书或者博客也是当时可能记住了，其实都是没有真正理解。理解之后几个原则都是可推导的。 都知道java是面向对象的，这个是刚开始学习java的时候就接触到的，具有三大特性，即继承、封装、多态，可以说是java中的一个哲学。既然是面向对象的，那必然涉及到对象间的交流。如果不进行总结，从使用经验来看，有以下几种， extend 继承 做为另外一个对象的内部属性 做为方法变量 做为局部变量 Implements实现 这种是基础的语法，也是直观的感受，对写代码也没有啥指导意义，对进一步的架构设计就更没啥意义了。 如果看过书或者百度，就会知道分为以下几种，也是对上面的几种物理形式做了思想层面的总结 继承：直接extend 实现：直接implements 关联：表现方式为作为内部成员变量 组合：整体和局部，局部跟整体不可分割 聚合：整体和部分，部分可脱离整体存在 依赖 表现方式为作为方法参数 其中，关联，组合，聚合着几种关系的真正理解也是最近的事。百度类与类之间关系的时候，给的解释大概也是上面的解释了，如果不做进一步的思考的话，上面关于组合和聚合的解释也是两句废话，跟写代码有什么关系呢？ 其实， 聚合和组合的区别上面只是思想层面，结合代码来说也就是，聚合的对象是可分离的，那么聚合的对象就可能被别的对象引用，从写代码的角度来说，它是作为变量的方式传进来，如从构造方法，或者set方法来给对象的属性进行赋值；而组合对象，由于对象之间不可分离，那么它只能new 一个实例出来给属性进行赋值,进一步说，这个涉及到了对象的生命周期的管理 所以组合的耦合性要比聚合高，总体上而言，继承&gt; 实现 &gt; 组合&gt;聚合&gt;依赖 上面也说到了java是面向对象的，那么为了更容易的进行开发和维护，我们肯定是希望工程后续修改和维护简单快速，因此，高可扩展（ 跟解耦合一个意思），便是我们在完成项目的时候第一要义，因此我们需呀进行架构设计，怎么设计？那么7大原则便是前人总结出来的经验。 外观模式 外观模式使用的频率比较高，尤其在三方SDK中，大概率会使用外观模式，用于屏蔽子系统的复杂性。要求外部跟内部的通信必须通过一个统一的接口来进行。门面模式（Facade）提供一个高层次的接口，方便子系统的使用。","categories":[],"tags":[]},{"title":"无题（一）","slug":"无题（一）","date":"2022-09-16T14:25:56.000Z","updated":"2022-09-24T15:02:18.847Z","comments":true,"path":"2022/09/16/无题（一）/","link":"","permalink":"http://example.com/2022/09/16/%E6%97%A0%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89/","excerpt":"","text":"​ 主要是想记录一下读《明朝那些事》一书后的一些感受。虽然早就听说这本书书，但是对于有拖延症的自己来说，也迟迟没有打开。第一次打开的时候也只是潦草看了几眼，因为太多了，没点耐心还看不了。直到不久前，耐着性子看了前面几节，禁不住感叹写的实在是太好了，吃饭看，下班也看，不知不觉看了三分之二。当然，为什么觉得这么好看，一个是书中从“人性”的角度来描述了一个不一样的明朝，能让人感受到“人”的温度，更接地气，不像历史课本那样无聊；其二，或多或少能从书中找到一些自己的影子，也许这才是深深吸引自己的地方。 ​ 朱元璋：明朝的创始人，真正开局一个碗。身世凄惨，前期打各种零工，还到庙里当和尚，然后被逼着去谋反。说到这，常说“穷人的孩子早当家”，其实也都是迫不得已的事，被逼着提前但起大人的责任，也容易歪曲三观（情不自禁想起自己小时候家里条件也不咋地）。贫穷和苦难未必能锻炼一个人，被这样的环境毁掉的也大有人在，能正常成长已属不易，有一番作为我觉得更是难上加难了。当然，对于朱重八同志我也是比较好奇的，另外我也没时间去仔细调查他到底经历了什么。书中描述他投靠郭子兴时，“但在这个人的眼睛里，他看到的只有镇定”，接着“比起其他的农民兵士，他是一个很突出的人，不但作战勇敢，而且很有计谋，处事冷静，思虑深远（注意这个特点），还很讲义气，有危险的时候第一个上，这一切都让他有了崇高的威信。” 。所以，至少能判断，朱重八同志应该是个十分有气场的人，而且外露。或许他没有在前期接受到好的科学教育，但是这些困难对于他的秉性、智慧和魄力，我觉得应该是得到很好的锻炼的。他应该是一个身体素质很好的人，常常思考，而且很有判断力，还是一个有追求的人。不然也不可能除了打仗厉害，还有头脑，更重要的是会做事，这个我觉得除了头脑外，更要有强大的人格，比如胆大，做事果断，隐忍，甚至无赖等等，综合起来，我觉得叫“厚黑”更合适一点，关于“厚黑”，这个应该可以另开一个篇章了，后面肯定也要写相关的文章，这些在后面其他人身上也能看到，但凡在庙堂上呼风唤雨的人，其“厚黑”程度都远超常人。而对于自己而言，“厚黑”程度就相当于白纸了，这玩意好像也确实要经历一些风雨才能锻炼出来。也足以说明朱同志的优秀了。 ​ 其次，朱同志还会识人，跟郭子兴分别时，“他从自己的七百人中重新挑选了二十四个人”，“他挑得确实很准，看看这些人的名字：徐达、汤和、周德兴……这二十四个人后来都成为了明王朝的高级干部。”。可见朱同志的眼光十分狠。当然，我也不知道他挑人的依据是什么，但有两点应该可以确认，一个是个人能力强，会打仗，能打胜仗；其次，都跟他一样是个有魄力的人。就好比要一个人要创业找自己的合伙人，肯定是想找一些厉害的，要么“多金”，要么“多才”，重要的是能做成事，能把这个公司办起来，办长远。那么就要做很多事了，比如确定公司的定位，发展方向&#x2F;是否有发展前景，竞争能力等等，要做好足够的市场调研。这些完成后应该就要进行产品研发了。 ​ 说到这里忍不住插几句，为什么讨论朱元璋以及后面其他人物的事迹，主要目的还是为了学习他们做人的手段，“做事”这个就不总结了，毕竟跟我干的事也不一样。讲道理，这个也不知道应该从哪里说起，情不自禁想起一句话，“天下熙熙皆为利来，天下攘攘皆为利往”，个人的社会活动大概都逃不出这个定律吧。从朱元璋的角度，想要给子孙留一个稳定的王朝，从严嵩的角度，要的是一人之下的权利和荣华富贵，从海瑞的角度，要的是一个没有腐败的朝廷。“人”本身就是复杂，充满了各种欲望和矛盾，从这些历史人物中也都能看到自己的影子，另外，对于“事”，觉得“具体问题具体分析”这个讲的非常好。","categories":[{"name":"杂记","slug":"杂记","permalink":"http://example.com/categories/%E6%9D%82%E8%AE%B0/"}],"tags":[]},{"title":"我的第一篇博客","slug":"我的第一篇博客","date":"2022-09-13T15:50:16.000Z","updated":"2023-04-05T06:36:22.386Z","comments":true,"path":"2022/09/13/我的第一篇博客/","link":"","permalink":"http://example.com/2022/09/13/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"想说点什么，却又什么都想说","categories":[{"name":"杂记","slug":"杂记","permalink":"http://example.com/categories/%E6%9D%82%E8%AE%B0/"}],"tags":[]}],"categories":[{"name":"杂记","slug":"杂记","permalink":"http://example.com/categories/%E6%9D%82%E8%AE%B0/"}],"tags":[]}